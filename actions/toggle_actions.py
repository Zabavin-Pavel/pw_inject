"""
Toggle –¥–µ–π—Å—Ç–≤–∏—è - –û–ë–ù–û–í–õ–ï–ù–û: Headhunter —á–µ—Ä–µ–∑ AHK
"""
import logging
from core.keygen import PERMISSION_TRY, PERMISSION_PRO, PERMISSION_DEV

def register_toggle_actions(action_manager, multibox_manager, ahk_manager, app_state, main_window):
    """
    –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ toggle –¥–µ–π—Å—Ç–≤–∏—è
    
    Args:
        action_manager: –º–µ–Ω–µ–¥–∂–µ—Ä –¥–µ–π—Å—Ç–≤–∏–π
        multibox_manager: –º–µ–Ω–µ–¥–∂–µ—Ä –º—É–ª—å—Ç–∏–±–æ–∫—Å–∞
        ahk_manager: –º–µ–Ω–µ–¥–∂–µ—Ä AHK
        app_state: —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        main_window: –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ (–¥–ª—è –∑–∞–ø—É—Å–∫–∞ loops)
    """
    
    # === FOLLOW (TRY) ===
    def toggle_follow():
        """Toggle: Follow"""
        is_active = app_state.is_action_active('follow')
        
        if is_active:
            print("Follow: STARTED")
            multibox_manager.start_follow_freeze()  # –î–û–ë–ê–í–ò–¢–¨!
            main_window._start_action_loop('follow', lambda: follow_loop_callback(multibox_manager))  # –ò–°–ü–†–ê–í–ò–¢–¨!
        else:
            print("Follow: STOPPED")
            main_window._stop_action_loop('follow')
            multibox_manager.stop_follow_freeze()  # –î–û–ë–ê–í–ò–¢–¨!
    
    action_manager.register(
        'follow',
        label='Follow',
        type='toggle',
        callback=toggle_follow,
        icon='üë£',
        has_hotkey=False,
        required_permission=PERMISSION_TRY
    )
    
    # === ATTACK (PRO) - –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê ===
    def toggle_attack():
        """Toggle: –ê—Ç–∞–∫–∞ (–∞—Å—Å–∏—Å—Ç + –º–∞–∫—Ä–æ—Å—ã)"""
        is_active = app_state.is_action_active('attack')
        
        if is_active:
            print("Attack: STARTED")
            main_window._start_action_loop('attack', lambda: attack_loop_callback(multibox_manager, ahk_manager, app_state))
        else:
            print("Attack: STOPPED")
            main_window._stop_action_loop('attack')

    action_manager.register(
        'attack',
        label='Attack',
        type='toggle',
        callback=toggle_attack,
        icon='‚öîÔ∏è',
        has_hotkey=False,
        required_permission=PERMISSION_PRO
    )
    
    # === HEADHUNTER (DEV) - –û–ë–ù–û–í–õ–ï–ù–û: —á–µ—Ä–µ–∑ AHK ===
    def toggle_headhunter():
        """
        Toggle: Headhunter (Tab + –õ–ö–ú –ø–æ 100, 100 –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–∫–Ω–∞)
        
        –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê:
        - –ü—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: –≤—ã–∑—ã–≤–∞–µ–º ahk_manager.start_headhunter()
        - –ü—Ä–∏ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏: –≤—ã–∑—ã–≤–∞–µ–º ahk_manager.stop_headhunter()
        - –í–µ—Å—å —Ü–∏–∫–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ AHK, –±–µ–∑ Python loops
        """
        is_active = app_state.is_action_active('headhunter')
        
        if is_active:
            print("Headhunter: STARTED")
            # –ó–∞–ø—É—Å–∫–∞–µ–º AHK —Ü–∏–∫–ª
            ahk_manager.start_headhunter()
        else:
            print("Headhunter: STOPPED")
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º AHK —Ü–∏–∫–ª
            ahk_manager.stop_headhunter()

    action_manager.register(
        'headhunter',
        label='Headhunter',
        type='toggle',
        callback=toggle_headhunter,
        icon='‚ò†',
        has_hotkey=False,
        required_permission=PERMISSION_PRO
    )


# === CALLBACK –§–£–ù–ö–¶–ò–ò –î–õ–Ø LOOPS ===

def follow_loop_callback(ahk_manager):
    """Callback –¥–ª—è Follow loop (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 500ms)"""
    try:
        ahk_manager.follow_leader()
    except Exception as e:
        logging.error(f"Error in follow_loop_callback: {e}")

def attack_loop_callback(multibox_manager, ahk_manager, app_state):
    """Callback –¥–ª—è Attack loop (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 500ms)"""
    from config.constants import GUARD_ID, BOSS_IDS
    
    # –ë–µ—Ä–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ –æ–∫–Ω–æ
    active_char = app_state.last_active_character
    
    if not active_char:
        return
    
    # –ß–∏—Ç–∞–µ–º target_id
    active_char.char_base.refresh()
    target_id = active_char.char_base.target_id
    
    if not target_id or target_id == 0:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ü–µ–ª–∏
    if target_id == GUARD_ID:
        # Guard - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É
        ahk_manager.attack_guard()
    elif target_id in BOSS_IDS:
        # Boss - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É
        ahk_manager.attack_boss()