"""
–ú–µ–Ω–µ–¥–∂–µ—Ä –ª–∏—Ü–µ–Ω–∑–∏–π —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ç–∞–ª–æ–Ω–æ–≤ –∏ —É—Ä–æ–≤–Ω–µ–π –¥–æ—Å—Ç—É–ø–∞
–†–∞–±–æ—Ç–∞–µ—Ç —Å license.ini
"""
import logging
from keygen import (
    verify_license, 
    get_mac_address, 
    compare_permissions,
    PERMISSION_NONE
)

class LicenseManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ª–∏—Ü–µ–Ω–∑–∏–π"""
    
    @staticmethod
    def verify_best_license(license_config) -> tuple[bool, str]:
        """
        –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∞–ª–æ–Ω –∏ –∫–ª—é—á, –≤—ã–±—Ä–∞—Ç—å –Ω–∞–∏–≤—ã—Å—à–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞
        
        –õ–æ–≥–∏–∫–∞:
        1. –ü–µ—Ä–µ—á–∏—Ç–∞—Ç—å license.ini (—á—Ç–æ–±—ã –ø–æ–¥—Ö–≤–∞—Ç–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è)
        2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∞–ª–æ–Ω (–µ—Å–ª–∏ –µ—Å—Ç—å)
        3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª—é—á (–µ—Å–ª–∏ –µ—Å—Ç—å)
        4. –í—ã–±—Ä–∞—Ç—å –Ω–∞–∏–≤—ã—Å—à–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞
        
        Args:
            license_config: –æ–±—ä–µ–∫—Ç LicenseConfig –¥–ª—è —á—Ç–µ–Ω–∏—è license.ini
        
        Returns:
            (success: bool, permission_level: str)
            - success: True –µ—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∫–ª—é—á –≤–∞–ª–∏–¥–µ–Ω
            - permission_level: "none" / "try" / "pro" / "dev"
        """
        # –ù–û–í–û–ï: –ü–µ—Ä–µ—á–∏—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª –ø–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ—Ä–∫–æ–π
        license_config.reload()
        
        current_mac = get_mac_address()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º hwid –≤ license.ini (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª—Å—è)
        if license_config.get_hwid() != current_mac:
            license_config.set_hwid(current_mac)
        
        # –ß–∏—Ç–∞–µ–º –∫–ª—é—á–∏ –∏–∑ license.ini
        key = license_config.get_key()
        ticket = license_config.get_ticket()
        
        best_permission = PERMISSION_NONE
        has_valid_license = False
        
        # === –ü–†–û–í–ï–†–ö–ê –¢–ê–õ–û–ù–ê (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç) ===
        if ticket and ticket != "":
            ticket_success, ticket_perm, ticket_msg = verify_license(ticket, current_mac)
            
            if ticket_success:
                logging.info(f"‚úÖ Ticket valid: {ticket_perm}")
                best_permission = compare_permissions(best_permission, ticket_perm)
                has_valid_license = True
            else:
                logging.warning(f"‚ùå Ticket invalid: {ticket_msg}")
        
        # === –ü–†–û–í–ï–†–ö–ê –û–°–ù–û–í–ù–û–ì–û –ö–õ–Æ–ß–ê ===
        if key and key != "":
            key_success, key_perm, key_msg = verify_license(key, current_mac)
            
            if key_success:
                logging.info(f"‚úÖ Key valid: {key_perm}")
                best_permission = compare_permissions(best_permission, key_perm)
                has_valid_license = True
            else:
                logging.warning(f"‚ùå Key invalid: {key_msg}")
        
        # === –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢ ===
        if has_valid_license:
            logging.info(f"üéØ Best permission level: {best_permission}")
            return True, best_permission
        else:
            logging.warning("‚ùå No valid license found")
            return False, PERMISSION_NONE